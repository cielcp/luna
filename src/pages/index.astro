---
import Nav from "../components/Nav.astro";
import Modal from "../components/Modal.astro";
import Chat from "../components/Chat.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <title>Luna</title>
  </head>

  <body
    class="dark flex flex-col h-screen w-screen bg-gradient-to-b from-gray-200 dark:from-gray-100 to-purple-200 dark:to-gray-500 text-black dark:text-off-white font-inter font-medium px-2 sm:px-6 xl:px-24">
    <!-- Page load animation -->
    <div
      id="intro-animation"
      class="fixed inset-0 flex items-center justify-center bg-off-white dark:bg-gray-800 z-50">
      <div class="animate-spin">
        <svg
          class="w-16 h-16"
          viewBox="0 0 32 32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M29.3327 15.9997C29.3327 8.63568 23.3633 2.66634 15.9993 2.66634C15.382 2.66634 15.2793 3.59168 15.8087 3.91034C16.9345 4.59002 17.8908 5.51697 18.6053 6.62099C19.3198 7.72501 19.7737 8.97715 19.9326 10.2826C20.0914 11.588 19.9512 12.9124 19.5224 14.1556C19.0936 15.3988 18.3875 16.5281 17.4576 17.458C16.5278 18.3878 15.3985 19.0939 14.1553 19.5227C12.9121 19.9515 11.5877 20.0918 10.2822 19.9329C8.97682 19.774 7.72469 19.3201 6.62066 18.6056C5.51664 17.8911 4.58969 16.9348 3.91002 15.809C3.59002 15.2797 2.66602 15.3823 2.66602 15.9997C2.66602 23.3637 8.63535 29.333 15.9993 29.333C23.3633 29.333 29.3327 23.3637 29.3327 15.9997Z"
            fill="currentColor"></path>
        </svg>
      </div>
    </div>

    <!-- Intro modal -->
    <Modal />

    <!-- Chatbot content -->
    <div id="main-content">
      <Nav />
      <main
        class="flex flex-grow flex-col lg:flex-row items-center justify-center h-[calc(100vh-06rem)]">
        <Chat />
      </main>
    </div>

    <script>
      // Intro animation stuff
      document.addEventListener("DOMContentLoaded", () => {
        const introAnimation = document.getElementById("intro-animation");

        setTimeout(() => {
          introAnimation.classList.add("animate-fade-out");
          introAnimation.addEventListener("animationend", () => {
            introAnimation.remove();
          });
        }, 500);
      });

      // Modal stuff
      const modal = document.getElementById("modal-overlay");
      const closeBtn = document.getElementById("close-modal");
      if (closeBtn) {
        closeBtn.addEventListener("click", closeModal);
      }

      function closeModal() {
        modal.classList.add("hidden");
      }

      // Dark mode toggle stuff
      const toggle = document.getElementById("toggle") as HTMLInputElement;

      // Apply default dark mode if no preference is set

      // Set the theme based on localStorage or default to dark
      const storedTheme = localStorage.getItem("theme");
      if (storedTheme === "dark" || !storedTheme) {
        document.body.classList.add("dark");
        toggle.checked = true;
        localStorage.setItem("theme", "dark");
        if (toggle) toggle.checked = true;
      } else {
        document.body.classList.remove("dark");
        localStorage.setItem("theme", "light");
        if (toggle) toggle.checked = false;
      }

      toggle.addEventListener("change", () => {
        if (toggle.checked) {
          document.body.classList.add("dark");
          localStorage.setItem("theme", "dark");
        } else {
          document.body.classList.remove("dark");
          localStorage.setItem("theme", "light");
        }
      });
    </script>
  </body>
</html>
